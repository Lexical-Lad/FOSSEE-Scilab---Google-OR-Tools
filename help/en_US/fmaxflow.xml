<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from fmaxflow.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="fmaxflow" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>fmaxflow</refname>
    <refpurpose>Solves the graph max-flow problem(a linear optimization problem) using an implementation of the push-relabel algorithm</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   [maxflow,arcflows]=fmaxflow(start_nodes,end_nodes,capacities,st)
   [maxflow,arcflows,status]=fmaxflow(start_nodes,end_nodes,capacities,st)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>start_nodes :</term>
      <listitem><para> a [1xn] vector (if the graph has 'n' arcs, for instance) of integral values which stores the numerical label of the start-nodes (tail-nodes) for each arc of the graph.</para></listitem></varlistentry>
   <varlistentry><term>end_nodes :</term>
      <listitem><para> a [1xn] vector of integral values which stores the value (numerical label) of the end-nodes(head-nodes) for each arc of the graph.</para></listitem></varlistentry>
   <varlistentry><term>capacities :</term>
      <listitem><para> a [1xn] vector of integral values which stores the capacities (max amount possible over a particular arc) of the respective arcs. Eg. The capacity at index 'i' of this matrix means the maximum amount possible over the arc defined by start_node[i]-&gt;end_node[i].</para></listitem></varlistentry>
   <varlistentry><term>st :</term>
      <listitem><para> a [1x2] vector which stores the numerical-label (value) of the source node and the target node, respectively.</para></listitem></varlistentry>
   <varlistentry><term>maxflow :</term>
      <listitem><para> a double representing the Maximum total Flow possible(i.e. Solution) through the system in the optimal solution, should there be one.</para></listitem></varlistentry>
   <varlistentry><term>arcflows :</term>
      <listitem><para> a [1xn] vector of double (if the graph has 'n' arcs, for instance) which represents the actual flow through the respective arcs in the optimal solution of the problem, should one exist.</para></listitem></varlistentry>
   <varlistentry><term>status :</term>
      <listitem><para> status flag returned by the Google OR-tools MaxFlow Solver function (details below)</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
<latex>
\text{The \textbf{`Maximum-Flow' Problem } is a classic (linear) optimization problem for Flow Networks}^{*}\text{. Essentially a part of the class of \textbf{`Circulation Problems'}, it involves finding the maximum amount of flow possible from a specified (source) node to another (sink) node, in a given network.}\\
\text{}\\
^{*}\text{\underline{\textbf{Flow Network}} - A flow network (also called a `transportation network'), in graph theory, is essentially a directed graph with one (or more) \textbf{source} node(s) and one (or more) \textbf{sink} node(s) and several other standard nodes, connected by edges called \textbf{`arcs'}.}\\
\text{\textbf{`Flow'} is any entity that circulates through the network, from the source to the sink. Eg. electric current in a printed circuit, water in a plumbing network, etc.}\\
\text{}\\\\
\text{}\\\\
\text{\textbf{\underline{MATHEMATICAL STATEMENT} :}}\\
\text{}\\
\text{}\\
</latex>
<latex>
\begin{math}
\text{Let } N= \left(V,E\right) \text{ be a network with } s,t \in V \text{ denoting the source and sink nodes in } N\text{, respectively.}\\\\
\text{Let } c_{uv} \text{ or } c\left(u,v\right) \text{ denote the capacity of the arc between node } u \text{ and  } v.\\
\text{capacity is a mapping } c:V\to R^{+} \\\\
\text{Let } f_{uv} \text{ or } f\left(u,v)\right) \text{ denotes the flow between node } u \text{ and } v, \text{such that :}\\
\text{  1. } f_{uv} \leq c_{uv} \quad \forall \quad (u,v) \in E.\\
\text{  2. } \sum_{u:(u,v)\in E} f_{uv} = \sum_{u:(v,u) \in E} f_{vu}\quad \forall \quad v \in V \backslash \{s,t\}\quad\text{; conservation of flow}\\\\\\
\text{}\\
\text{}\\
\text{}\\
\textbf{\underline{Objective} :}
\text{}\qquad\qquad\qquad Maximize \quad |f| = \sum_{v:(s,v) \in E}f_{sv} \text{,where }s\text{ is the source vertex for } N.\\\\
\text{}\qquad\qquad\qquad\text{}\qquad\qquad\qquad |f| \text{  denotes the total amount of flow passing from the source to the sink}\\
\end{math}
\text{}\\
\text{}\\
\text{}\\
\text{}\\
</latex>
   </para>
   <para>
status- the status of solution returned by the linked Google OR-Tools max-flow solver
<itemizedlist>
<listitem>status=0    -    OPTIMAL(An optimal solution was found)</listitem>
<listitem>status=1    -    INT_OVERFLOW(There is a feasible flow &gt; max possible flow)</listitem>
<listitem>status=2    -    BAD_INPUT(The input is inconsistent)</listitem>
<listitem>status=3    -    BAD_RESULT (There was an error)</listitem>
</itemizedlist>
   </para>
   <para>
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[

start_nodes = [0, 0, 0, 1, 1, 2, 2, 3, 3]
end_nodes = [1, 2, 3, 2, 4, 3, 4, 2, 4]
capacities = [20, 30, 10, 40, 30, 10, 20, 5, 20]
st=[0,4]
[maxflow,arcflows,status]=fmaxflow(start_nodes,end_nodes,capacities,st)
// Press Enter to continue
//Output
//Max flow = 60
//Arc    Flow    Capacity
//0->1    20    20
//0->2    30    30
//0->3    10    10
//1->2    0    40
//1->4    20    30
//2->3    10    10
//2->4    20    20
//3->2    0    5
//3->4    20    20

//An optimal solution was found
// status  =
//
//  0
// arcflows  =
//
//  20  30  10  0  20  10  20  0  20
// maxflow  =
//
//  60


   ]]></programlisting>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[

start_nodes = [1, 1, 2, 2, 3, 3, 0]
end_nodes = [2, 4, 3, 4, 2, 4, 5]
capacities = [40, 30, 10, 20, 5, 20, 50]
st=[0,4]
[maxflow,arcflows,status]=fmaxflow(start_nodes,end_nodes,capacities,st)
//Press Enter to continue
//     Output
//     Max flow = 0
//Arc    Flow    Capacity
//1->2    0    40
//1->4    0    30
//2->3    0    10
//2->4    0    20
//3->2    0    5
//3->4    0    20
//0->5    0    50

//There is no path connecting the specified source node : 0  and the specified target node : 4
// status  =
//
//  0
// arcflows  =
//
//     []
// maxflow  =
//
//  0


   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Samuel Wilson</member>
   </simplelist>
</refsection>
</refentry>
